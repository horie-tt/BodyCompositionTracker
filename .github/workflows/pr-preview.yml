name: PR Preview Deployment

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  preview-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test -- --passWithNoTests --watchAll=false
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      id: vercel-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-comment: true
        working-directory: ./
    
    - name: Run E2E tests against preview
      run: npm run test:e2e
      env:
        PLAYWRIGHT_BASE_URL: ${{ steps.vercel-deploy.outputs.preview-url }}
        # Use MSW for preview E2E tests
        NEXT_PUBLIC_SUPABASE_URL: ""
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ""
    
    - name: Comment PR with preview URL and test results
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
          const testStatus = '${{ job.status }}';
          const emoji = testStatus === 'success' ? '‚úÖ' : '‚ùå';
          
          const body = `
          ## üöÄ Preview Deployment
          
          **Preview URL:** ${previewUrl}
          **Test Status:** ${emoji} ${testStatus}
          
          ### Changes in this PR:
          - Built and tested successfully
          - E2E tests ${testStatus === 'success' ? 'passed' : 'failed'}
          - Ready for review
          
          *This preview will be automatically updated when you push new commits.*
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
    
    - name: Upload preview test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: preview-test-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  visual-regression:
    runs-on: ubuntu-latest
    needs: preview-deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run visual regression tests
      run: npx playwright test --config=playwright-visual.config.ts
      env:
        PLAYWRIGHT_BASE_URL: ${{ needs.preview-deploy.outputs.preview-url }}
    
    - name: Upload visual regression results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-regression-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  accessibility-test:
    runs-on: ubuntu-latest
    needs: preview-deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run accessibility tests
      run: npx playwright test --config=playwright-a11y.config.ts
      env:
        PLAYWRIGHT_BASE_URL: ${{ needs.preview-deploy.outputs.preview-url }}
    
    - name: Upload accessibility test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  performance-test:
    runs-on: ubuntu-latest
    needs: preview-deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
    
    - name: Run Lighthouse audit on preview
      run: lhci autorun --upload.target=temporary-public-storage
      env:
        LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
        LHCI_BUILD_CONTEXT__COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        LHCI_BUILD_CONTEXT__AUTHOR: ${{ github.actor }}
        LHCI_BUILD_CONTEXT__AVATAR_URL: https://github.com/${{ github.actor }}.png
        SITE_URL: ${{ needs.preview-deploy.outputs.preview-url }}
    
    - name: Comment PR with performance results
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            const lhciResults = JSON.parse(fs.readFileSync('.lighthouseci/lhci_reports/manifest.json', 'utf8'));
            const summary = lhciResults[0].summary;
            
            const body = `
            ## üìä Performance Report
            
            **Performance Score:** ${Math.round(summary.performance * 100)}
            **Accessibility Score:** ${Math.round(summary.accessibility * 100)}
            **Best Practices Score:** ${Math.round(summary['best-practices'] * 100)}
            **SEO Score:** ${Math.round(summary.seo * 100)}
            
            [View detailed report](${lhciResults[0].url})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          } catch (error) {
            console.log('Could not parse Lighthouse results:', error);
          }
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: .lighthouseci/
        retention-days: 30